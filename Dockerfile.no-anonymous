FROM ghcr.io/open-webui/open-webui:v0.6.15

# Install any additional dependencies if needed
USER root

# Copy our custom backend files
COPY backend/open_webui/routers/auths.py /app/backend/open_webui/routers/auths.py
COPY backend/open_webui/demo_auth_data.py /app/backend/open_webui/demo_auth_data.py
COPY backend/open_webui/utils/auth.py /app/backend/open_webui/utils/auth.py
COPY backend/open_webui/config.py /app/backend/open_webui/config.py
COPY backend/open_webui/main.py /app/backend/open_webui/main.py

# Create the comprehensive patch to remove anonymous content
RUN cat > /app/build/remove-anonymous-page.js << 'EOF'
// Comprehensive removal of anonymous showcase page
(function() {
    console.log('EagleGPT: Removing anonymous showcase page completely');
    
    // Helper to check if user is authenticated
    function isAuthenticated() {
        return !!localStorage.getItem('token');
    }
    
    // Redirect to auth if not authenticated
    function checkAuthAndRedirect() {
        if (!isAuthenticated() && window.location.pathname !== '/auth') {
            console.log('EagleGPT: Redirecting unauthenticated user to /auth');
            window.location.href = '/auth';
            return true;
        }
        return false;
    }
    
    // Function to aggressively remove anonymous content
    function removeAnonymousContent() {
        // Remove any element containing the specific text
        const textsToRemove = [
            'Welcome to eagleGPT',
            'Explore example conversations',
            'sign up to start your own',
            'This is a preview mode',
            'Sign In to Chat',
            'Select a Model',
            'Example Conversations',
            'Sign Up to Start Your Own Conversation'
        ];
        
        // Find and remove elements containing these texts
        textsToRemove.forEach(text => {
            const walker = document.createTreeWalker(
                document.body,
                NodeFilter.SHOW_TEXT,
                null,
                false
            );
            
            let node;
            while (node = walker.nextNode()) {
                if (node.nodeValue && node.nodeValue.includes(text)) {
                    // Find the parent container and hide it
                    let parent = node.parentElement;
                    while (parent && parent !== document.body) {
                        const classList = parent.className || '';
                        if (classList.includes('flex-col') || 
                            classList.includes('container') ||
                            classList.includes('w-full') ||
                            parent.tagName === 'MAIN' ||
                            parent.tagName === 'SECTION') {
                            parent.style.display = 'none';
                            break;
                        }
                        parent = parent.parentElement;
                    }
                }
            }
        });
        
        // Remove specific selectors
        const selectorsToRemove = [
            '[class*="preview"]',
            '[class*="showcase"]',
            '[class*="anonymous"]',
            '.bg-blue-600.text-white'
        ];
        
        selectorsToRemove.forEach(selector => {
            try {
                document.querySelectorAll(selector).forEach(el => {
                    if (el.textContent && (
                        el.textContent.includes('Welcome to eagleGPT') ||
                        el.textContent.includes('preview mode') ||
                        el.textContent.includes('Example Conversations')
                    )) {
                        el.remove();
                    }
                });
            } catch (e) {}
        });
    }
    
    // Check auth on load
    if (checkAuthAndRedirect()) return;
    
    // Run removal immediately
    removeAnonymousContent();
    
    // Monitor for changes
    const observer = new MutationObserver(() => {
        removeAnonymousContent();
    });
    
    observer.observe(document.body, {
        childList: true,
        subtree: true
    });
    
    // Run periodically
    setInterval(() => {
        if (!isAuthenticated() && window.location.pathname !== '/auth') {
            window.location.href = '/auth';
        }
        removeAnonymousContent();
    }, 1000);
})();
EOF

# Update index.html to include our patches
RUN if [ -f /app/build/index.html ]; then \
        # Add immediate auth check
        sed -i '/<\/body>/i <script>if(!localStorage.getItem("token") && window.location.pathname !== "/auth"){window.location.href="/auth";}</script>' /app/build/index.html && \
        # Add comprehensive removal script
        sed -i '/<\/body>/i <script src="/remove-anonymous-page.js"></script>' /app/build/index.html; \
    fi

# Set proper permissions
RUN chown -R 1000:1000 /app/backend/open_webui/*.py /app/build/remove-anonymous-page.js

# Switch back to non-root user
USER 1000

# Set environment variables
ENV ENABLE_DEMO_MODE=true
ENV WEBUI_NAME=eagleGPT
ENV WEBUI_URL=https://eaglegpt.us
# Force authentication for all routes
ENV WEBUI_AUTH_REQUIRED=true